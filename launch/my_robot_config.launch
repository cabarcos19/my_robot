<?xml version="1.0"?>

<launch>

	<!-- RP LIDAR NODE -->
	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
	  <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
	  <param name="serial_baudrate"     type="int"    value="115200"/>
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
	</node>
	<!-- REALSENSE NODE -->
	<include file="$(find realsense_camera)/launch/r200_nodelet_rgbd.launch"/>
	
   <!--- Run AMCL --> 
   <!--<include file="$(find amcl)/examples/amcl_omni.launch" />-->
   <node pkg="amcl" type="amcl" name="amcl" output = "screen">
		<param name="tf_broadcast" value="true" />
		<param name="base_frame_id" value="base_link" />
		<param name="global_frame_id" value="map" />
		<param name="odom_frame_id" value="scanmatch_odom" />
		<param name="use_map_topic" value="true" />

		<remap from="scan" to="/scan" />
		<param name="transform_tolerance" value="0.5" />
		<param name="gui_publish_rate" value="-1.0"/>
		
		<param name="laser_sigma_hit" value="0.2"/>
		<param name="laser_lambda_short" value="0.1"/>
		<param name="laser_model_type" value="likelihood_field"/>
		<param name="laser_likelihood_max_dist" value="2.0"/>
		<param name="update_min_a" value="0.5"/>
		<param name="resample_interval" value="2"/>
		<param name="transform_tolerance" value="0.5"/>
		<param name="recovery_alpha_slow" value="0.0"/>
		<param name="recovery_alpha_fast" value="0.0"/>
   </node>
	
	
	<!-- HECTOR MAPPING -->
	<arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
	<arg name="base_frame" default="base_link"/>
	<arg name="odom_frame" default="base_link"/>

	<arg name="pub_map_odom_transform" default="false"/>
	<!--<arg name="scan_subscriber_queue_size" default="5"/>-->
	<arg name="scan_subscriber_queue_size" default="1"/>
	<arg name="scan_topic" default="scan"/>
	<arg name="map_size" default="256"/>
	<arg name="map_topic" default="map" />

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
        
		<!-- Frame names -->
		<param name="map_frame" value="map" />
		<param name="base_frame" value="$(arg base_frame)" />
		<param name="odom_frame" value="$(arg odom_frame)" />
		<param name="pub_odometry" value="true" />
		<!-- Tf use -->
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>

		<!-- Map size / start point -->
		<param name="map_resolution" value="0.050"/>
		<param name="map_size" value="$(arg map_size)"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="2" />

		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.4"/>
		<param name="update_factor_occupied" value="0.9" />    
		<param name="map_update_distance_thresh" value="0.4"/>
		<param name="map_update_angle_thresh" value="0.06" />
		<param name="laser_z_min_value" value = "-1.0" />
		<param name="laser_z_max_value" value = "1.0" />

		<!-- Advertising config --> 
		<param name="advertise_map_service" value="true"/>
	    <remap from="map" to="$(arg map_topic)" />
		<param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
		<param name="scan_topic" value="$(arg scan_topic)"/>

		<!-- Debug parameters -->
		<!--
		  <param name="output_timing" value="false"/>
		  <param name="pub_drawings" value="true"/>
		  <param name="pub_debug_output" value="true"/>
		-->
		<param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
		<param name="pub_map_scanmatch_transform" value="false"/>  
	</node>

   <!-- Run the map server --> 
   <node name="map_server" pkg="map_server" type="map_server" args="$(find my_robot)/maps/circuit.pgm 0.05"/>



   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load" />
     <!-- LOAD COSTMAP_CONVERTER PARAMETERS HERE -->
    <rosparam file="$(find my_robot)/config/costmap_converter_params.yaml" command="load" />
    <param name="clearing_rotation_allowed" value="false" />
    
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    <param name="controller_frequency" value="5.0" />
   </node>
   
   <node pkg="self_driving" name="self_driving_converter" type="twist_to_pololu.py"/>
 
	<node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0 0 0 0 0 0 base_link laser 100" />
	<node pkg="tf" type="static_transform_publisher" name="base_to_camera_broadcaster" args="0 0.35 -0.10 0 0 0 base_link camera_link 100" />
</launch>

