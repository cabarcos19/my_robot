<?xml version="1.0"?>
<launch>

	<node pkg="map_server" type="map_server" name="map_server" args="$(find my_robot)/maps/circuito_pequeno.yaml" />
	<node pkg="amcl" type="amcl" name="amcl">
		<param name="tf_broadcast" value="true" />
		<param name="base_frame_id" value="/base_footprint" />
		<param name="global_frame_id" value="/map" />
		<param name="odom_frame_id" value="/scanmatch_odom" />
		<param name="use_map_topic" value="false" />

	    <param name="odom_model_type" value="diff-corrected" />
	    <param name="transform_tolerance" value="0.2" />
	    <param name="gui_publish_rate" value="-1.0"/>
	    <param name="laser_max_beams" value="30"/>
	    <param name="laser_max_range" value="29.5"/>
	    <param name="min_particles" value="100"/>
	    <param name="max_particles" value="5000"/>
	    <param name="update_min_d" value="0.2"/>
	    <param name="kld_err" value="0.01"/>
	    <param name="kld_z" value="0.99"/>
	    <param name="odom_alpha1" value="0.2"/>
	    <param name="odom_alpha2" value="0.2"/>
	    <param name="odom_alpha3" value="0.2"/>
	    <param name="odom_alpha4" value="0.2"/>
	    <param name="odom_alpha5" value="0.2"/>
	    <param name="laser_z_hit" value="0.95"/>
	    <param name="laser_z_short" value="0.1"/>
	    <param name="laser_z_max" value="0.05"/>
	    <param name="laser_z_rand" value="0.05"/>
	    <param name="laser_sigma_hit" value="0.2"/>
	    <param name="laser_lambda_short" value="0.1"/>
	    <param name="laser_model_type" value="likelihood_field"/>
	    <param name="laser_likelihood_max_dist" value="2.0"/>
	    <param name="update_min_a" value="0.5"/>
	    <param name="resample_interval" value="2"/>
	    <param name="transform_tolerance" value="0.1"/>
	    <param name="recovery_alpha_slow" value="0.0"/>
	    <param name="recovery_alpha_fast" value="0.0"/>
	  </node>


	
	<!--
		ODOM TRANSFORMER
	-->
	<node name="odom_transformer" pkg="odom_transformer" type="transform.py" output="screen">
		<param name="odom_input" value="/scanmatch_odom" />
		<param name="tf_output" value="/base_footprint" />
	</node>

	<!--
		HECTOR STUFF
	-->
	
	<node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
   		<remap from="map" to="/mapcurrent" />
    	        <param name="map_frame" value="/mapcurrent" />
    		<param name="base_frame" value="/base_footprint" />
    		<param name="odom_frame" value="/scanmatcher_odom" />
		<param name="pub_odometry" value="true" />
    		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
    		<param name="pub_map_odom_transform" value="false" />
    
		<param name="map_resolution" value="0.1"/>
    		<param name="map_size" value="256"/>
    		<param name="map_start_x" value="0.5"/>
    		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="2" />
    
    		<param name="update_factor_free" value="0.4" />
    		<param name="update_factor_occupied" value="0.9" />    
    		<param name="map_update_distance_thresh" value="0.4" />
    		<param name="map_update_angle_thresh" value="0.06" />
    		<param name="laser_z_min_value" value = "-1.0" />
    		<param name="laser_z_max_value" value = "1.0" />

    		<param name="advertise_map_service" value="true" />
    
    		<param name="scan_subscriber_queue_size" value="1"/>
    		<param name="scan_topic" value="/scan"/>
    		<param name="pub_map_scanmatch_transform" value="false" />
    		<param name="tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />
	</node>
        <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0.0 0.0 0.0 0 0 0.0 /map /scanmatch_odom 100"/>
	<node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0.1 0 0.08 0 0 0 base_link laser 100" />
	<node pkg="tf" type="static_transform_publisher" name="base_to_camera_broadcaster" args="0.35 0 0 0 0 0 base_link camera_depth_frame 1000" />
        <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="-0.2 0 0.1 0 0 0 base_footprint base_link 100" />

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    	<rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    	<rosparam file="$(find my_robot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    	<rosparam file="$(find my_robot)/config/local_costmap_params.yaml" command="load" />
    	<rosparam file="$(find my_robot)/config/global_costmap_params.yaml" command="load" /> 
    	<rosparam file="$(find my_robot)/config/base_local_planner_params.yaml" command="load" />
    	<rosparam file="$(find my_robot)/config/global_planner_params.yaml" command="load" />
     	<!-- LOAD COSTMAP_CONVERTER PARAMETERS HERE -->
    	<rosparam file="$(find my_robot)/config/costmap_converter_params.yaml" command="load" />
    	<param name="clearing_rotation_allowed" value="false" />
    
    	<param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="4.50" />
		<param name="planner_patience" value="10.0" />
    
    	<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    	<param name="controller_frequency" value="5.5" />
	<param name="controller_patience" value="15.0" />
   </node>

   <node pkg="self_driving" name="self_driving" type="twist_to_pololu.py"/>
   
</launch>
